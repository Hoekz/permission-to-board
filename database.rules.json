{
  "rules": {
    ".read": "false",
    ".write": "false",
    "colors": {
      ".write": "false"
    },
    "$game": {
      ".read": "true",
      ".validate": "(!data.exists() && newData.hasChildren(['players', 'board', 'deck'])) || !newData.exists()",
      "started": {
        ".read": "true",
        ".validate": "!data.exists() && newData.val() == 'fight!'"
      },
      "board": {
        ".read": "true",
        ".validate": "(!data.exists() && newData.hasChildren(['points', 'connections'])) || !newData.exists()",
        "points": {
          "$point": {
            ".validate": "!data.exists() && newData.hasChildren(['x', 'y'])",
            "x": {
              ".validate": "!data.exists() && newData.isNumber() && newData.val() > 0 && newData.val() < 100"
            },
            "y": {
              ".validate": "!data.exists() && newData.isNumber()  && newData.val() > 0 && newData.val() < 100"
            }
          }
        },
        "connections": {
          "$connection": {
            ".validate": "!data.exists() && newData.hasChildren(['start', 'end', 'length', 'color'])",
            "start": {
              ".validate": "!data.exists() && root.child($game).child('points').hasChild(newData.val())"
            },
            "end": {
              ".validate": "!data.exists() && root.child($game).child('points').hasChild(newData.val())"
            },
            "color": {
              ".validate": "!data.exists() && root.child('colors').hasChild(newData.val()) || newData.val() == 'any'"
            },
            "length": {
              ".validate": "!data.exists() && newData.val() > 0 && newData.val() < 7"
            },
            "occupant": {
              ".validate": "!data.exists() && root.child($game).child('players').hasChild(newData.val())"
            }
          }
        }
      },
      "players": {
        "$player": {
          "hand": {
            ".read": "auth.uid == data.child('uid').val()",
            "red": {
              ".validate": "newData.isNumber()"
            },
            "orange": {
              ".validate": "newData.isNumber()"
            },
            "yellow": {
              ".validate": "newData.isNumber()"
            },
            "green": {
              ".validate": "newData.isNumber()"
            },
            "blue": {
              ".validate": "newData.isNumber()"
            },
            "violet": {
              ".validate": "newData.isNumber()"
            },
            "black": {
              ".validate": "newData.isNumber()"
            },
            "white": {
              ".validate": "newData.isNumber()"
            },
            "locomotive": {
              ".validate": "newData.isNumber()"
            }
          },
          "trains": {
            ".read": "true",
            ".validate": "newData.isNumber()"
          },
          "name": {
            ".read": "true",
            ".validate": "newData.isString()"
          },
          "uid": {
            ".read": "true",
            ".validate": "newData.isString()"
          }
        }
      },
      "deck": {
        "red": {
          ".validate": "newData.isNumber()"
        },
        "orange": {
          ".validate": "newData.isNumber()"
        },
        "yellow": {
          ".validate": "newData.isNumber()"
        },
        "green": {
          ".validate": "newData.isNumber()"
        },
        "blue": {
          ".validate": "newData.isNumber()"
        },
        "violet": {
          ".validate": "newData.isNumber()"
        },
        "black": {
          ".validate": "newData.isNumber()"
        },
        "white": {
          ".validate": "newData.isNumber()"
        },
        "locomotive": {
          ".validate": "newData.isNumber()"
        }
      },
      "routes": {
        "$route": {
          "start": {
            ".validate": "newData.isString()"
          },
          "end": {
            ".validate": "newData.isString()"
          },
          "worth": {
            ".validate": "newData.isNumber()"
          }
        }
      },
      "display": {
        ".read": "true",
        "slot-1": {
          ".validate": "root.child('colors').hasChild(newData.val())"
        },
        "slot-2": {
          ".validate": "root.child('colors').hasChild(newData.val())"
        },
        "slot-3": {
          ".validate": "root.child('colors').hasChild(newData.val())"
        },
        "slot-4": {
          ".validate": "root.child('colors').hasChild(newData.val())"
        },
        "slot-5": {
          ".validate": "root.child('colors').hasChild(newData.val())"
        }
      },
      "current": {
        ".read": "true",
        ".validate": "newData.hasChildren(['player', 'action']) && data.child('player').val() != newData.child('player').val() && newData.child('action').val() == 0",
        "player": {
          ".validate": "root.child($game).child('players').hasChild(newData.val())"
        },
        "action": {
          ".validate": "data.val() == 0 && newData.val() == 1"
        }
      },
      "order": {
        ".read": "true",
        "$player": {
          ".validate": "root.child($game).child('players').hasChild(newData.val())"
        }
      }
    }
  }
}
